name: Ubuntu Desktop with noVNC + Tailscale

on:
  workflow_dispatch:
    inputs:
      geometry:
        description: "VNC geometry (resolution)"
        required: false
        default: "1280x800"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Build systemd desktop image
        run: |
          cat > Dockerfile <<'EOF'
          FROM ubuntu:22.04

          ENV DEBIAN_FRONTEND=noninteractive

          RUN apt-get update && apt-get -y upgrade && apt-get -y dist-upgrade && \
              apt-get install -y --no-install-recommends \
                  ca-certificates curl sudo gosu dbus dbus-x11 \
                  systemd udev \
                  xauth x11-xserver-utils xterm \
                  lxde-core openbox lightdm-gtk-greeter \
                  tigervnc-standalone-server tigervnc-common \
                  novnc websockify supervisor \
                  software-properties-common gpg-agent \
                  tailscale iproute2 firefox-esr && \
              rm -rf /var/lib/apt/lists/*

          # Create user
          RUN useradd -m -s /bin/bash dev && echo 'dev ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

          # systemd service for VNC
          RUN mkdir -p /etc/systemd/system && \
              bash -c "cat > /etc/systemd/system/vncserver@.service <<'EOL'
          [Unit]
          Description=Start TigerVNC server at %i
          After=syslog.target network.target

          [Service]
          Type=forking
          User=dev
          PAMName=login
          PIDFile=/home/dev/.vnc/%H%i.pid
          ExecStartPre=-/usr/bin/vncserver -kill %i > /dev/null 2>&1
          ExecStart=/usr/bin/vncserver %i -geometry 1280x800 -depth 24
          ExecStop=/usr/bin/vncserver -kill %i

          [Install]
          WantedBy=multi-user.target
          EOL"

          # systemd service for noVNC
          RUN bash -c "cat > /etc/systemd/system/novnc.service <<'EOL'
          [Unit]
          Description=noVNC server
          After=network.target

          [Service]
          Type=simple
          User=dev
          ExecStart=/usr/bin/websockify --web=/usr/share/novnc/ 6080 localhost:5901

          [Install]
          WantedBy=multi-user.target
          EOL"
          EOF

          docker build -t novnc-lxde:latest .

      - name: Run container
        run: |
          docker run -d \
            --name desktop \
            --privileged \
            --cgroupns=host \
            --tmpfs /run \
            --tmpfs /run/lock \
            -v /sys/fs/cgroup:/sys/fs/cgroup:rw \
            -e GEOMETRY="${{ github.event.inputs.geometry }}" \
            -e TAILSCALE_AUTHKEY="${{ secrets.TAILSCALE_AUTHKEY }}" \
            novnc-lxde:latest

      - name: Wait for services
        run: |
          timeout 60s bash -lc 'until docker exec desktop systemctl is-system-running --wait; do sleep 2; done' || true
          docker exec desktop systemctl status dbus systemd-logind || true

      - name: Configure VNC password and geometry
        run: |
          PASS=$(openssl rand -base64 12 | tr -dc 'A-Za-z0-9' | head -c12)
          echo "$PASS" > vnc-password.txt
          docker exec -u dev desktop bash -lc "printf '%s\n%s\nno\n' $PASS $PASS | vncpasswd"
          sed -i "s/1280x800/${{ github.event.inputs.geometry }}/" /etc/systemd/system/vncserver@.service
          docker exec desktop systemctl daemon-reload
          docker exec desktop systemctl restart vncserver@:1
          docker exec desktop systemctl restart novnc

      - name: Start Tailscale
        run: |
          docker exec -d desktop tailscaled
          docker exec desktop tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --hostname github-novnc
          docker exec desktop tailscale ip -4 > tailscale-ip.txt

      - name: Show connection info
        run: |
          TS_IP=$(cat tailscale-ip.txt)
          VNC_PASS=$(cat vnc-password.txt)
          echo "noVNC is running: http://$TS_IP:6080/vnc.html"
          echo "Your VNC password: $VNC_PASS"

      - name: Add run summary
        run: |
          TS_IP=$(cat tailscale-ip.txt)
          VNC_PASS=$(cat vnc-password.txt)
          echo "### Access Desktop" >> $GITHUB_STEP_SUMMARY
          echo "[Open noVNC](http://$TS_IP:6080/vnc.html)" >> $GITHUB_STEP_SUMMARY
          echo "**VNC Password:** $VNC_PASS" >> $GITHUB_STEP_SUMMARY

      - name: Keep alive 6 hours
        run: sleep 21600
